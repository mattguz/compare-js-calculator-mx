var n = {}; const e = [{ min: .01, max: 58, amount: 13.34 }, { min: 58.01, max: 87, amount: 13.34 }, { min: 87.01, max: 113.86, amount: 13.33 }, { min: 113.87, max: 116, amount: 12.88 }, { min: 116.01, max: 145.78, amount: 12.54 }, { min: 145.79, max: 154.66, amount: 11.61 }, { min: 154.67, max: 174.93, amount: 10.65 }, { min: 174.94, max: 204.09, amount: 9.66 }, { min: 204.1, max: 233.24, amount: 8.31 }, { min: 233.25, max: 242.04, amount: 7.13 }, { min: 242.05, max: 1 / 0, amount: 0 }], a = [{ min: .01, max: 884.48, amount: 203.51 }, { min: 884.49, max: 1326.69, amount: 203.42 }, { min: 1326.7, max: 1736.42, amount: 203.31 }, { min: 1736.43, max: 1768.94, amount: 196.39 }, { min: 1768.95, max: 2223.08, amount: 191.23 }, { min: 2223.09, max: 2358.59, amount: 177.12 }, { min: 2358.6, max: 2667.71, amount: 162.44 }, { min: 2667.72, max: 3112.34, amount: 147.32 }, { min: 3112.35, max: 3556.95, amount: 126.77 }, { min: 3556.96, max: 3691.17, amount: 108.81 }, { min: 3691.18, max: 1 / 0, amount: 0 }], t = [{ min: .01, max: 1768.96, amount: 407.02 }, { min: 1768.97, max: 2653.38, amount: 406.83 }, { min: 2653.39, max: 3472.84, amount: 406.62 }, { min: 3472.85, max: 3537.87, amount: 392.77 }, { min: 3537.88, max: 4446.15, amount: 382.46 }, { min: 4446.16, max: 4717.18, amount: 354.23 }, { min: 4717.19, max: 5335.42, amount: 324.87 }, { min: 5335.43, max: 6224.67, amount: 294.63 }, { min: 6224.68, max: 7113.9, amount: 253.54 }, { min: 7113.91, max: 7382.33, amount: 217.61 }, { min: 7382.34, max: 1 / 0, amount: 0 }]; n = function (n, m) { return (n => { switch (n) { case "diario": return e; case "quincenal": return a; case "mensual": return t; default: throw new Error(`Periodo no valido: ${n}`) } })(m).find((e => n >= e.min && n <= e.max)).amount }; var m = {}; const r = [{ min: .01, max: 21.19, amount: 0, percent: .0192 }, { min: 21.2, max: 179.87, amount: .41, percent: .064 }, { min: 179.88, max: 316.1, amount: 10.56, percent: .1088 }, { min: 316.11, max: 367.45, amount: 25.38, percent: .16 }, { min: 367.46, max: 439.94, amount: 33.6, percent: .1792 }, { min: 439.95, max: 887.29, amount: 46.59, percent: .2136 }, { min: 887.3, max: 1398.5, amount: 142.15, percent: .2352 }, { min: 1398.51, max: 2669.96, amount: 262.38, percent: .3 }, { min: 2669.97, max: 3559.95, amount: 643.82, percent: .32 }, { min: 3559.96, max: 10679.84, amount: 928.61, percent: .34 }, { min: 10679.85, max: 1 / 0, amount: 3349.38, percent: .35 }], o = [{ min: .01, max: 318, amount: 0, percent: .0192 }, { min: 318.01, max: 2699.4, amount: 6.15, percent: .064 }, { min: 2699.41, max: 4744.05, amount: 158.55, percent: .1088 }, { min: 4744.06, max: 5514.75, amount: 381, percent: .16 }, { min: 5514.76, max: 6602.7, amount: 504.3, percent: .1792 }, { min: 6602.71, max: 13316.7, amount: 699.3, percent: .2136 }, { min: 13316.71, max: 20988.9, amount: 2133.3, percent: .2352 }, { min: 20988.81, max: 40071.3, amount: 3937.8, percent: .3 }, { min: 40071.31, max: 53428.5, amount: 9662.55, percent: .32 }, { min: 53428.51, max: 160285.35, amount: 13936.8, percent: .34 }, { min: 160285.36, max: 1 / 0, amount: 50268.15, percent: .35 }], i = [{ min: .01, max: 644.58, amount: 0, percent: .0192 }, { min: 644.59, max: 5470.92, amount: 12.38, percent: .064 }, { min: 5470.93, max: 9614.66, amount: 321.26, percent: .1088 }, { min: 9614.67, max: 11176.62, amount: 772.1, percent: .16 }, { min: 11176.63, max: 13381.47, amount: 1022.01, percent: .1792 }, { min: 13381.48, max: 26988.5, amount: 1417.12, percent: .2136 }, { min: 26988.51, max: 42537.58, amount: 4323.58, percent: .2352 }, { min: 42537.59, max: 81211.25, amount: 7980.73, percent: .3 }, { min: 81211.26, max: 108281.67, amount: 19582.83, percent: .32 }, { min: 108281.68, max: 324845.01, amount: 28245.36, percent: .34 }, { min: 324845.02, max: 1 / 0, amount: 101876.9, percent: .35 }]; m = function (n, e) { let a = 0, t = null, m = n, c = 0, u = 0, s = 0, d = 0, l = 0; switch (e) { case "diario": t = r; break; case "quincenal": t = o; break; case "mensual": t = i; break; default: throw new Error(`Periodo no valido: ${e}`) }return t.forEach((e => { n >= e.min && n <= e.max && (c = e.min, u = n - c, s = e.percent, d = u * s, l = e.amount, a = d + l) })), { baseGravable: m, limiteInferior: c, excedente: u, porcentajeSobreExcedente: s, impuestoMarginal: d, cuotaFija: l, lisr: a } }; var c, u = {}; c = { riesgo: { patron: .005, trabajador: 0 }, enfermedad: { cuotaFija: { patron: .204, trabajador: 0 }, excedente: { patron: .011, trabajador: .004 }, gastosMedicos: { patron: .0105, trabajador: .00375 }, prestaciones: { patron: .007, trabajador: .0025 } }, invalidez: { patron: .0175, trabajador: .00625 }, cesantia: { retiro: { patron: .02, trabajador: 0 }, vejez: { patron: .0315, trabajador: .01125 } }, guarderias: { patron: .01, trabajador: 0 }, infonavit: { patron: .05, trabajador: 0 } }; var s; const d = n => { switch (n) { case "diario": return 1; case "quincenal": return 15; case "mensual": return 30; default: throw new Error(`Periodo no valido: ${n}`) } }; var l = (s = { getDays: d, getBenefit: (n, e, a, t, m) => "patron" === n ? e === a ? t * d(m) * c.enfermedad.prestaciones.patron + a * d(m) * c.enfermedad.prestaciones.trabajador : t * d(m) * c.enfermedad.prestaciones.patron : e !== a ? t * d(m) * c.enfermedad.prestaciones.trabajador : 0, getMedicalExpenses: (n, e, a, t, m) => "patron" === n ? e === a ? t * d(m) * c.enfermedad.gastosMedicos.patron + a * d(m) * c.enfermedad.gastosMedicos.trabajador : t * d(m) * c.enfermedad.gastosMedicos.patron : e !== a ? t * d(m) * c.enfermedad.gastosMedicos.trabajador : 0, getUnemploymentAndOldAge: (n, e, a, t, m) => "patron" === n ? e === a ? t * d(m) * c.cesantia.vejez.patron + a * d(m) * c.cesantia.vejez.trabajador : t * d(m) * c.cesantia.vejez.patron : e !== a ? t * d(m) * c.cesantia.vejez.trabajador : 0, getDisability: (n, e, a, t, m) => "patron" === n ? e === a ? t * d(m) * c.invalidez.patron + a * d(m) * c.invalidez.trabajador : t * d(m) * c.invalidez.patron : e !== a ? t * d(m) * c.invalidez.trabajador : 0 }).getDays, p = s.getBenefit, x = s.getMedicalExpenses, f = s.getUnemploymentAndOldAge, g = s.getDisability; u = function (n, e, a) { const t = 96.22, m = 172.87, r = n / l(e), o = Math.min(1.0452 * r, 2405.5), i = t * l(e) * c.enfermedad.cuotaFija[a], u = o > 3 * t ? (o - 3 * t) * c.enfermedad.excedente[a] * l(e) : 0, s = p(a, r, m, o, e), d = x(a, r, m, o, e), b = o * l(e) * c.riesgo[a], j = g(a, r, m, o, e), v = o * l(e) * c.guarderias[a], y = o * l(e) * c.cesantia.retiro[a], E = o * l(e) * c.infonavit[a], M = f(a, r, m, o, e); return i + u + s + d + b + j + v + y + E + M }; const b = document.getElementsByClassName("btn-period"), j = {}, v = n => { for (const e of b) j[e.name] = n === e.name, n === e.name ? e.classList.add("active") : e.classList.remove("active"); if (!n) return; const e = document.getElementsByClassName("SELECTED_PERIOD"); console.log({ activeName: n, periodSpan: e }); for (const a of e) a.innerHTML = n }; v(); for (const n of b) console.log(n.name), j[n.name] = !1, n.addEventListener("click", y); function y(n) { const e = n?.target?.name; e && v(e) } var E = j; const M = { mensual: 6223.2, quincenal: 3111.6, diario: 207.44 }; function B(e, a, t = !1) { const r = m(e, a), o = n(e, a), i = ((n, e) => Math.abs(n.lisr - e))(r, o), c = u(e, a, "trabajador"), s = r.lisr > o ? e - i : e + i; return { lisr: r, subsidy: o, isr: i, security: c, netSalary: t ? s - c : s } } const I = new Intl.NumberFormat("es-MX", { style: "currency", currency: "MXN", minimumFractionDigits: 2, maximumFractionDigits: 2 }); document.getElementById("calcular-sueldo").addEventListener("click", (n => { const e = document.getElementById("sueldo-bruto"), a = (n => { for (const e in n) if (n[e]) return e })(E), t = document.getElementById("imss-check")?.checked; if (!a) return void alert("Debes seleccionar un período"); const m = M[a], r = parseFloat(e.value); if (r < m) return void alert(`El sueldo bruto no puede ser inferior al salario mínimo de ${I.format(m)} MXN para el período ${a}.`); (n => { const e = document.getElementById("limite-inferior"), a = document.getElementById("excedente-limite-inferior"), t = document.getElementById("porcentaje-excedente"), m = document.getElementById("impuesto-marginal"), r = document.getElementById("cuota-fija-impuesto"), o = document.getElementById("isr"), i = document.getElementById("imss"), c = document.getElementById("subsidio"), u = document.getElementById("sueldo-neto"); e.innerHTML = I.format(n.lisr.limiteInferior), a.innerHTML = I.format(n.lisr.excedente), t.innerHTML = I.format(n.lisr.porcentajeSobreExcedente), m.innerHTML = I.format(n.lisr.impuestoMarginal), r.innerHTML = I.format(n.lisr.cuotaFija), o.innerHTML = I.format(n.isr), i.innerHTML = I.format(n.security), c.innerHTML = I.format(n.subsidy), u.innerHTML = I.format(n.netSalary) + " MXN" })(B(r, a, t)) }));
//# sourceMappingURL=index.a547e2f1.js.map
